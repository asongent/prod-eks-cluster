
apiVersion: karpenter.sh/v1
kind: NodePool
metadata:
  name: default
spec:
  template:
    spec:
      requirements:
        - key: kubernetes.io/arch
          operator: In
          values: ["amd64", "amd64"]
        - key: kubernetes.io/os
          operator: In
          values: ["linux"]
        - key: karpenter.sh/capacity-type
          operator: In
          values: ["on-demand"]
        # - key: topology.kubernetes.io/zone
        #   operator: In 
        #   values: ["us-east-2a", "us-east-2a", "us-east-2c"]
        - key: karpenter.k8s.aws/instance-category
          operator: In
          values: ["t3.medium", "t2.medium", "m7i.2xlarge", "m5n.xlarge", "m5d.xlarge", "m5dn.xlarge", "m5a.xlarge", "m4.xlarge"]
        - key: karpenter.k8s.aws/instance-generation
          operator: Gt
          values: ["2"]
      nodeClassRef:
        group: karpenter.k8s.aws
        kind: EC2NodeClass
        name: default
      expireAfter: 24h
  limits:
    cpu: 1000
  disruption:
    consolidationPolicy: WhenEmptyOrUnderutilized
    consolidateAfter: 1m
---
apiVersion: karpenter.k8s.aws/v1
kind: EC2NodeClass
metadata:
  name: default
spec:
  role: "karpenter-prod-cluster-role"
  amiSelectorTerms:
    - alias: "al2023@v20250410"
  subnetSelectorTerms:
    - tags:
        karpenter.sh/discovery: "prod-cluster" # replace with your cluster name
  securityGroupSelectorTerms:
    - tags:
        karpenter.sh/discovery: "prod-cluster" # replace with your cluster name
